{"ast":null,"code":"import axios from 'axios';\nconst baseURL = `http://localhost:5000/api`;\nconst token = localStorage.getItem('token');\nconst API = axios.create({\n  baseURL,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\nlet resetHead = () => {\n  return {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n};\n\nconst actions = {\n  getUser: async () => {\n    //This will go get our user every time we refresh \n    return await axios.get(`${baseURL}/user`, resetHead());\n  },\n  getMyPosts: async () => {\n    return await axios.get(`${baseURL}/myPosts`, resetHead());\n  },\n  getAllPosts: async () => {\n    return await axios.get(`${baseURL}/getStrings`, resetHead());\n  },\n  addPosts: async login => {\n    return await axios.post(`${baseURL}/login`, {\n      post: login\n    }, resetHead());\n  },\n  logIn: async data => {\n    var _resFromOurDB$data;\n\n    let headerObj = resetHead();\n    headerObj.headers['X-Google-Token'] = data.tokenId;\n    let resFromOurDB = await axios.post(`${baseURL}/logMeIn`, data, headerObj);\n    console.log(resFromOurDB);\n    window.localStorage.setItem('token', resFromOurDB === null || resFromOurDB === void 0 ? void 0 : (_resFromOurDB$data = resFromOurDB.data) === null || _resFromOurDB$data === void 0 ? void 0 : _resFromOurDB$data.token);\n    return resFromOurDB;\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/steph/Desktop/Ironhack/Projects/JSBuddy/JSBuddy/jsbuddy1/frontend/src/api.js"],"names":["axios","baseURL","token","localStorage","getItem","API","create","headers","Authorization","resetHead","actions","getUser","get","getMyPosts","getAllPosts","addPosts","login","post","logIn","data","headerObj","tokenId","resFromOurDB","console","log","window","setItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAI,2BAAjB;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAa;AAAEL,EAAAA,OAAF;AAAWM,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,EAAG,UAASN,KAAM;AAAjC;AAApB,CAAb,CAAZ;;AAEA,IAAIO,SAAS,GAAG,MAAM;AAClB,SAAO;AACHF,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADN,GAAP;AAKH,CAND;;AAQA,MAAMM,OAAO,GAAG;AAEZC,EAAAA,OAAO,EAAE,YAAY;AACjB;AACA,WAAO,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,OAArB,EAA6BQ,SAAS,EAAtC,CAAb;AACH,GALW;AAMZI,EAAAA,UAAU,EAAE,YAAY;AACpB,WAAO,MAAMb,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,UAArB,EAAgCQ,SAAS,EAAzC,CAAb;AACH,GARW;AAUZK,EAAAA,WAAW,EAAG,YAAW;AACrB,WAAO,MAAMd,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,aAArB,EAAmCQ,SAAS,EAA5C,CAAb;AACH,GAZW;AAcZM,EAAAA,QAAQ,EAAE,MAAMC,KAAN,IAAgB;AACtB,WAAO,MAAMhB,KAAK,CAACiB,IAAN,CAAY,GAAEhB,OAAQ,QAAtB,EAA+B;AAACgB,MAAAA,IAAI,EAAED;AAAP,KAA/B,EAA8CP,SAAS,EAAvD,CAAb;AACH,GAhBW;AAkBZS,EAAAA,KAAK,EAAG,MAAMC,IAAN,IAAe;AAAA;;AACnB,QAAIC,SAAS,GAAGX,SAAS,EAAzB;AACAW,IAAAA,SAAS,CAACb,OAAV,CAAkB,gBAAlB,IAAsCY,IAAI,CAACE,OAA3C;AAEA,QAAIC,YAAY,GAAG,MAAMtB,KAAK,CAACiB,IAAN,CAAY,GAAEhB,OAAQ,UAAtB,EAAiCkB,IAAjC,EAAuCC,SAAvC,CAAzB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAG,IAAAA,MAAM,CAACtB,YAAP,CAAoBuB,OAApB,CAA4B,OAA5B,EAAqCJ,YAArC,aAAqCA,YAArC,6CAAqCA,YAAY,CAAEH,IAAnD,uDAAqC,mBAAoBjB,KAAzD;AAEA,WAAOoB,YAAP;AACH;AA5BW,CAAhB;AAgCA,eAAeZ,OAAf","sourcesContent":["import axios from 'axios'\n\nconst baseURL = `http://localhost:5000/api`\nconst token = localStorage.getItem('token')\n\nconst API = axios.create({ baseURL, headers: { Authorization: `Bearer ${token}` } });\n\nlet resetHead = () => {\n    return { \n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n}\n\nconst actions = {\n\n    getUser: async () => {\n        //This will go get our user every time we refresh \n        return await axios.get(`${baseURL}/user`, resetHead())\n    },\n    getMyPosts: async () => {\n        return await axios.get(`${baseURL}/myPosts`, resetHead())\n    },\n\n    getAllPosts : async() => {\n        return await axios.get(`${baseURL}/getStrings`, resetHead())\n    },\n\n    addPosts: async(login) => {\n        return await axios.post(`${baseURL}/login`, {post: login}, resetHead())\n    },\n\n    logIn : async(data) => {\n        let headerObj = resetHead()\n        headerObj.headers['X-Google-Token'] = data.tokenId\n        \n        let resFromOurDB=  await axios.post(`${baseURL}/logMeIn`, data, headerObj)\n\n        console.log(resFromOurDB)\n        window.localStorage.setItem('token', resFromOurDB?.data?.token)\n\n        return resFromOurDB\n    }\n    \n}\n\nexport default actions"]},"metadata":{},"sourceType":"module"}