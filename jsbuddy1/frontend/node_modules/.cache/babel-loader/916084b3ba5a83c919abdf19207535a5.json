{"ast":null,"code":"var _jsxFileName = \"/Users/steph/Desktop/Ironhack/Projects/JSBuddy/JSBuddy/jsbuddy1/frontend/src/Components/Strings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Strings(props) {\n  _s();\n\n  const [strings, setStrings] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/getStrings`).then(Strings => {\n      console.log(Strings);\n    }).catch(console.log);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Strings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Strings, \"oQsYb3CzljnFlCyzh9OhyCPqc2w=\");\n\n_c = Strings;\nexport default Strings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Strings\");","map":{"version":3,"sources":["/Users/steph/Desktop/Ironhack/Projects/JSBuddy/JSBuddy/jsbuddy1/frontend/src/Components/Strings.js"],"names":["React","useState","useEffect","axios","Strings","props","strings","setStrings","get","then","console","log","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrB,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAArC;AACCC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACK,GAAN,CAAW,kCAAX,EACCC,IADD,CACOL,OAAD,IAAa;AACfM,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACH,KAHD,EAICQ,KAJD,CAIOF,OAAO,CAACC,GAJf;AAKH,GANQ,EAMN,EANM,CAAT;AAWI,sBACA;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAOP;;GApBQP,O;;KAAAA,O;AAsBT,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\n\n\nfunction Strings(props) {\n   const[strings, setStrings] = useState([])\n    useEffect(() => {\n        axios.get(`http://localhost:5000/getStrings`)\n        .then((Strings) => {\n            console.log(Strings)\n        })\n        .catch(console.log)\n    }, [])\n\n\n    \n    \n        return (\n        <div>\n            <h1> Strings</h1>\n\n\n        </div>\n    );\n}\n\nexport default Strings;"]},"metadata":{},"sourceType":"module"}